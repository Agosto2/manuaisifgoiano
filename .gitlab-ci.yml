default:
  before_script:
    # Configurações necessárias no nó do cluster que executa o `gitlab-runner`.
    #
    # O nó que executa o `gitlab-runner` é um `worker` e portanto não pode
    # executar os comandos de implantação das `stacks` no cluster.
    #
    # Para contornar essa situação, foi adicionado o usuário `builder` em
    # todos os `nós` do cluster com permissão para executar o `docker`. Esse
    # usuário pode acessar qualquer nó via SSH com o par de chaves
    # criptográficas.
    #
    # Entretanto, o `gitlab-runner` possui um usuário próprio para a execução
    # dos `jobs`. Por esse motivo, é necessário copiar e adicionar as chaves
    # do usuário `builder` para o usuário `gitlab-runner`.
    #
    # - sudo cp /home/builder/.ssh/id_rsa /home/gitlab-runner/.ssh/id_rsa_builder
    # - sudo cp /home/builder/.ssh/id_rsa.pub /home/gitlab-runner/.ssh/id_rsa_builder.pub
    # - sudo chown -R gitlab-runner:gitlab-runner /home/gitlab-runner/.ssh/
    # - sudo chmod 600 /home/gitlab-runner/.ssh/id_rsa_builder
    # - sudo chmod 600 /home/gitlab-runner/.ssh/id_rsa_builder.pub
    # - eval $(ssh-agent -s)
    # - ssh-add ~/.ssh/id_rsa_builder
    #
    # Após adicionar o par de chaves é necessário definir um `context` do docker
    # para executar os comandos em um `master`.
    #
    # sudo docker context create remote --docker "host=ssh://builder@ip.do.manager"
    #
    # Para evitar erros, faz-se necessário acessar o nó `manager` para adicionar a
    # entrada ao `known_hosts`.
    #
    # ssh builder@ip.do.manager
    #
    # Atenção: esses comandos devem ser executados com o usuário `gitlab-runner`.
    - eval $(ssh-agent -s)
    - ssh-add ~/.ssh/id_rsa_builder
    - echo -n $CI_JOB_TOKEN | docker login -u gitlab-ci-token --password-stdin $CI_REGISTRY
    - shopt -s expand_aliases
    # A instalação padrão do `docker-compose` não tem as permissões necessárias
    # para acessar o diretório `/tmp` do host. Por esse motivo, definimos um `alias`
    # para o comando com um novo diretório temporário.
    - alias docker-compose="TMPDIR=/var/tmp docker-compose"
    - export DOCKER_BUILDKIT=1

variables:
  WEBAPP_TAG: $CI_REGISTRY_IMAGE/app

stages:
  - deploy

.tags: &tags
  tags:
    - shell
    - dsi

publish prod image:
  <<: *tags
  stage: deploy
  script:
    - sh sha256sum.sh
    - docker build --target production -f Dockerfile -t $WEBAPP_TAG:$CI_COMMIT_TAG . --build-arg BUILDKIT_INLINE_CACHE=1
    - docker push $WEBAPP_TAG:$CI_COMMIT_TAG
  only:
    - tags
